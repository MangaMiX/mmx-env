version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      ELASTIC_PASSWORD: 'changeme'
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - mmx
    healthcheck:
      test: [ "CMD", "curl", "http://elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=1s"]
      interval: 5s
      timeout: 3s
      retries: 30

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
    networks:
      - mmx
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    networks:
      - mmx
    depends_on:
      - elasticsearch

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - C:\minio:/data
    networks:
      - mmx

  mmx-anime:
    build:
      context: ../mmx-anime/
      dockerfile: ../mmx-anime/Dockerfile
    environment:
      ES_HOST: 'http://elasticsearch:9200'
      ES_USER: 'elastic'
      ES_PASSWORD: 'i2L4ayKTlYZxMdLnwdYs'
      ES_INDEX: 'mangamix'
      MMX_EXTRACT_LIMIT: '30'
    networks:
      - mmx
    depends_on:
      elasticsearch:
        condition: service_healthy

  mmx-audio:
    build:
      context: ../mmx-audio/
      dockerfile: ../mmx-audio/Dockerfile
    environment:
      ES_HOST: 'http://elasticsearch:9200'
      ES_USER: 'elastic'
      ES_PASSWORD: 'i2L4ayKTlYZxMdLnwdYs'
      ES_INDEX: 'mangamix'
      S3_HOST: 'minio:9000'
      S3_ACCESS_KEY: 'minio'
      S3_SECRET_KEY: 'minio123'
      S3_BUCKET: 'mangamix'
      MMX_EXTRACT_LIMIT: '1'
    networks:
      - mmx
    depends_on:
      elasticsearch:
        condition: service_healthy

  mmx-video:
    build:
      context: ../mmx-video/
      dockerfile: ../mmx-video/Dockerfile
    environment:
      ES_HOST: 'http://elasticsearch:9200'
      ES_USER: 'elastic'
      ES_PASSWORD: 'i2L4ayKTlYZxMdLnwdYs'
      ES_INDEX: 'mangamix'
      S3_HOST: 'minio:9000'
      S3_ACCESS_KEY: 'minio'
      S3_SECRET_KEY: 'minio123'
      S3_BUCKET: 'mangamix'
    networks:
      - mmx
    depends_on:
      elasticsearch:
        condition: service_healthy

networks:
  mmx:
    driver: bridge

volumes:
  elasticsearch:
